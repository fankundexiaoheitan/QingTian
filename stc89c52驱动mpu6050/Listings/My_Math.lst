C51 COMPILER V9.54   MY_MATH                                                               09/24/2021 22:12:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MY_MATH
OBJECT MODULE PLACED IN .\Objects\My_Math.obj
COMPILER INVOKED BY: C:\xuexigongju\keil\C51\BIN\C51.EXE My_Math.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\My_Math.lst) TABS(2) OBJECT(.\Objects\My_Math.obj)

line level    source

   1          #include "My_Math.h"
   2          
   3          const float RtA = 57.2957795f;
   4          const float Gyro_Gr = 0.0005326f * 2;
   5          const float Gyro_G = 0.03051756f * 2; 
   6          
   7          /******************************************************************************
   8            * 函数名称：Q_rsqrt
   9            * 函数描述：快速计算 1 / Sqrt(x) 
  10            * 输    入：float number:要计算的数据
  11            * 输    出：void
  12            * 返    回：1 / Sqrt(x) 
  13            * 备    注：null
  14            *    
  15            *
  16          ******************************************************************************/
  17          float Q_rsqrt(float number)
  18          {
  19   1          long i;
  20   1          float x2, y;
  21   1          const float threehalfs = 1.5F;
  22   1       
  23   1          x2 = number * 0.5F;
  24   1          y  = number;
  25   1          i  = *(long*) &y;                      
  26   1          i  = 0x5f3759df - ( i >> 1 );               
  27   1          y  = *(float*) &i;
  28   1          y  = y * (threehalfs - (x2 * y * y ));   // 1st iteration （第一次牛顿迭代）
  29   1          return y;
  30   1      }
  31          
  32          float my_sqrt_reciprocal(float number)
  33          {
  34   1      //  long i;
  35   1      //  float x, y;
  36   1      //  const float f = 1.5F;
  37   1      //  x = number * 0.5F;
  38   1      //  y = number;
  39   1      //  i = * ( long * ) &y;
  40   1      //  i = 0x5f3759df - ( i >> 1 );
  41   1      
  42   1      //  y = * ( float * ) &i;
  43   1      //  y = y * ( f - ( x * y * y ) );
  44   1      //  y = y * ( f - ( x * y * y ) );
  45   1        
  46   1        long i;
  47   1        float x, y;
  48   1      
  49   1        x = number * 0.5F;
  50   1        y = number;
  51   1        i = * ( long * ) &y;
  52   1        i = 0x5f3759df - ( i >> 1 );
  53   1      
  54   1        y = * ( float * ) &i;
C51 COMPILER V9.54   MY_MATH                                                               09/24/2021 22:12:24 PAGE 2   

  55   1        y = y * ( 1.5f - ( x * y * y ) );
  56   1        y = y * ( 1.5f - ( x * y * y ) );
  57   1        
  58   1        return y;
  59   1      }
  60          
  61          //快速平方根算法
  62          float my_sqrt(float number)
  63          {
  64   1      //  long i;
  65   1      //  float x, y;
  66   1      //  const float f = 1.5F;
  67   1      //  x = number * 0.5F;
  68   1      //  y = number;
  69   1      //  i = * ( long * ) &y;
  70   1      //  i = 0x5f3759df - ( i >> 1 );
  71   1      
  72   1      //  y = * ( float * ) &i;
  73   1      //  y = y * ( f - ( x * y * y ) );
  74   1      //  y = y * ( f - ( x * y * y ) );
  75   1        return number * my_sqrt_reciprocal(number);
  76   1      }
  77          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    445    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      40
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
