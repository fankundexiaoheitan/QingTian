C51 COMPILER V9.54   SCHEDULE                                                              09/25/2021 15:17:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SCHEDULE
OBJECT MODULE PLACED IN .\Objects\schedule.obj
COMPILER INVOKED BY: C:\xuexigongju\keil\C51\BIN\C51.EXE schedule.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\schedule.lst) TABS(2) OBJECT(.\Objects\schedule.obj)

line level    source

   1          #include "schedule.h"
   2          #include "oled.h"
   3          static void Loop_1000Hz(void) //1ms执行一次
   4          {
   5   1        
   6   1      }
   7          
   8          static void Loop_500Hz(void)  //2ms执行一次
   9          { 
  10   1        Read_Mpu6050(); //读取mpu6050的数值
  11   1        OLED_ShowNum(0,0,MPU6050_Data.Acc_X,4);
  12   1      }
  13          
  14          static void Loop_200Hz(void)  //5ms执行一次
  15          {
  16   1      }
  17          
  18          static void Loop_100Hz(void)  //10ms执行一次
  19          {
  20   1            
  21   1              
  22   1      }
  23          
  24          
  25          //各函数进行时间上的分配
  26          //创建不同执行频率的各线程
  27          static sched_task_t sched_tasks[] =
  28          {
  29            {Loop_1000Hz,1000,  0, 0},
  30            {Loop_500Hz , 500,  0, 0},
  31            {Loop_200Hz , 200,  0, 0},
  32            {Loop_100Hz , 100,  0, 0},
  33          };
  34          
  35          //根据数组长度，判断线程数量
  36          #define TASK_NUM (sizeof(sched_tasks)/sizeof(sched_task_t))
  37          
  38          void Scheduler_Setup(void)//时间调度初始化
  39          {
  40   1        unsigned char index = 0;
  41   1        //初始化任务表
  42   1        for(index=0;index < TASK_NUM;index++)
  43   1        {
  44   2          //计算每个任务的延时周期数
  45   2          sched_tasks[index].interval_ticks = 1000/sched_tasks[index].rate_hz;
  46   2          //最短周期为1，也就是1ms
  47   2          if(sched_tasks[index].interval_ticks < 1)
  48   2          {
  49   3            sched_tasks[index].interval_ticks = 1;
  50   3          }
  51   2        }
  52   1      }
  53          
  54          void Schedule_Run(void) //核心轮训函数
C51 COMPILER V9.54   SCHEDULE                                                              09/25/2021 15:17:44 PAGE 2   

  55          {
  56   1        unsigned char index = 0;
  57   1        //循环判断所有线程，是否应该执行
  58   1      
  59   1        
  60   1        for(index=0;index < TASK_NUM;index++)
  61   1        {
  62   2          //获取系统当前时间，单位MS
  63   2          unsigned int tnow = sum_time;
  64   2          //进行判断，如果当前时间减去上一次执行的时间，大于等于该线程的执行周期，则执行线程
  65   2          if(tnow - sched_tasks[index].last_run >= sched_tasks[index].interval_ticks)
  66   2          {
  67   3            
  68   3            //更新线程的执行时间，用于下一次判断
  69   3            sched_tasks[index].last_run = tnow;
  70   3            //执行线程函数，使用的是函数指针
  71   3            sched_tasks[index].task_func();
  72   3      
  73   3          }  
  74   2        }
  75   1      }
  76          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
